AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ClassB:
    Description: Specify the Class B of the VPC (10.xxx.0.0/16).
    Type: Number
    Default: 0
    MinValue: 0
    MaxValue: 255
    ConstraintDescription: 'Must be in the range [0 - 255].'
  AmiId:
    Description: Provide the AMI ID to deploy, the latest Amazon Linux 2 AMI will be used by default.
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
Resources:
  ##### VPC #####################################################
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Sub '10.${ClassB}.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-vpc'
  ##### Internet Gateway ########################################
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-internet-gateway
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  ##### Subnets #################################################
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.0.0/20'
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-public-subnet-1'
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Sub '10.${ClassB}.48.0/20'
      MapPublicIpOnLaunch: false
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-private-subnet-1'
  ##### NAT Gateway #############################################
  NATGatewayEIP1:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NATGateway1:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NATGatewayEIP1.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-nat-gateway-1'
  ##### Route Tables ############################################
  PublicSubnetsRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-public-subnets-route-table-0'
  PrivateSubnet1RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-private-subnet-1-route-table'
  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicSubnetsRouteTable
  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateSubnet1RouteTable
  ##### Routes ##################################################
  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicSubnetsRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PrivateSubnet1InternetRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateSubnet1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1
  ###############################################################
  ##### RELEVANT EC2 CONNECTIVITY CONFIGURATIONS START HERE #####
  ###############################################################
  # EC2 Role ####################################################
  InstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref InstanceRole
  # SG with no ingress rules ####################################
  EC2SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group with no inbound access
      SecurityGroupEgress:
        - Description: Explicitly allow egress 
          CidrIp: 0.0.0.0/0
          FromPort: -1
          IpProtocol: -1
          ToPort: -1
      VpcId: !Ref VPC
  # EC2 Instance ################################################
  EC2:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: t2.micro
      ImageId: !Ref AmiId
      IamInstanceProfile: !Ref InstanceProfile
      SubnetId: !Ref PrivateSubnet1
      SecurityGroupIds:
        - !Ref EC2SG
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-ec2-instance'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # From: https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-manual-agent-install.html
          yum install -y https://s3.amazonaws.com/ec2-downloads-windows/SSMAgent/latest/linux_amd64/amazon-ssm-agent.rpm
  ##### EC2 SSM Access Policy ###################################
  SsmAccessOnly:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Provides user permissions needed to access EC2 instances via Systems Manager Session Manager
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ReadOnly
            Effect: Allow
            Action:
              - 'ssm:DescribeSessions'
              - 'ssm:GetConnectionStatus'
              - 'ssm:DescribeInstanceProperties'
              - 'ec2:DescribeInstances'
            Resource:
              - '*'
          - Sid: StartSession
            Effect: Allow
            Action:
              - 'ssm:StartSession'
            Resource:
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/${EC2}'
          - Sid: TerminateSession
            Effect: Allow
            Action:
              - 'ssm:TerminateSession'
            Resource:
              - 'arn:aws:ssm:*:*:session/${aws:username}-*'
  # EC2 SSM SSH Tunnel with Instance Connect Access Policy ######
  SsmAndSshAccess:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
      Description: Provides user permissions needed to access EC2 instances via Systems Manager Session Manager SSH Tunneling and EC2 Instance Connect
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: ReadOnly
            Effect: Allow
            Action:
              - 'ssm:DescribeSessions'
              - 'ssm:GetConnectionStatus'
              - 'ssm:DescribeInstanceProperties'
              - 'ec2:DescribeInstances'
            Resource:
              - '*'
          - Sid: StartSession
            Effect: Allow
            Action:
              - 'ssm:StartSession'
            Resource:
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/${EC2}'
              - !Sub 'arn:aws:ssm:${AWS::Region}::document/AWS-StartSSHSession'
            #Uncomment to disallow SSM and force user to use SSH
            #Condition:
            #  BoolIfExists:
            #    ssm:SessionDocumentAccessCheck: true
          - Sid: TerminateSession
            Effect: Allow
            Action:
              - 'ssm:TerminateSession'
            Resource:
              - 'arn:aws:ssm:*:*:session/${aws:username}-*'
          - Sid: PublishKey
            Effect: Allow
            Action:
              - 'ec2-instance-connect:SendSSHPublicKey'
            Resource:
              - !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/${EC2}'
            Condition:
              StringEquals:
                ec2:osuser: ec2-user
  EC2SsmMUser:
    Type: 'AWS::IAM::User'
    Properties:
      ManagedPolicyArns:
        - !Ref SsmAccessOnly
  EC2SshUser:
    Type: 'AWS::IAM::User'
    Properties:
      ManagedPolicyArns:
        - !Ref SsmAndSshAccess